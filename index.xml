<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.Net Programmer Incubator</title>
    <link>https://lien-chu.github.io/IncubatorBlog.io/</link>
    <description>Recent content on .Net Programmer Incubator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lien-chu.github.io/IncubatorBlog.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Blog</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/about_blog/</link>
      <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/about_blog/</guid>
      <description>By writing a blog, I can better understand the technologies and application methods of .NET and share them with you. This is a great plan! Here are some steps you can follow to start your journey in learning .NET and building web apps with ASP.NET Core:
1. Install Visual Studio:
Visual Studio is an integrated development environment (IDE) used for .NET development. You can download the latest version of Visual Studio from the official Microsoft website.</description>
    </item>
    
    <item>
      <title>Create Admin &amp; User Role</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/admin_and_user/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/admin_and_user/</guid>
      <description>What are the Admin and User roles in ASP.NET used for? The Admin and User roles are used to control access to different areas of a web application based on the user&amp;rsquo;s role.
The Admin role typically has access to all areas of the application, including sensitive administrative functions such as user management, system settings, and other restricted areas.
The User role, on the other hand, typically has limited access to the application and can only perform certain actions or access certain areas of the application.</description>
    </item>
    
    <item>
      <title>Let&#39;s style up our appliction with Bootswatch!</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/bootswatch/</link>
      <pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/bootswatch/</guid>
      <description>Bootswatch is a free collection of Bootstrap themes that offers a variety of easy-to-use and customizable themes for quickly adding visual style to Bootstrap websites or applications.
Each theme comes with a CSS file and optional JavaScript files for convenience and customization.
Bootswatch is a great way to add style and visual appeal to Bootstrap projects without spending a lot of time designing and coding from scratch.
Now that we have our application up and running, let&amp;rsquo;s style it up with Bootswatch!</description>
    </item>
    
    <item>
      <title>Change Database</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/change_database/</link>
      <pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/change_database/</guid>
      <description>Now that we have a custom registration form, we need to change the database if we want to save the data in a specific database. In this article, we will change the database created in one article to another database of ours.
Let&amp;rsquo;s check the existing database in SQL Server Object Explorer: Go to &amp;ldquo;View&amp;rdquo; menu at the top of the screen, and click &amp;ldquo;SQL Server Object Explorer&amp;rdquo; from the dropdown menu to open SQL Server Object Explorer.</description>
    </item>
    
    <item>
      <title>GitHub Copilot</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/github_copilot/</link>
      <pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/github_copilot/</guid>
      <description>GitHub Copilot is an artificial intelligence (AI) powered code assistant that is built on OpenAI&amp;rsquo;s GPT (Generative Pre-trained Transformer) model. It is designed to help developers write code more efficiently by generating code suggestions based on the context of what the developer is working on. GitHub Copilot is currently available as a preview for Visual Studio Code, and it is free to use. GitHub Copilot can be used as a plugin for Visual Studio Code, and it works by analyzing the code in real-time, along with the comments and the context of the code, and suggests code snippets and functions that are relevant to the developer&amp;rsquo;s task.</description>
    </item>
    
    <item>
      <title>Register form</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/register/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/register/</guid>
      <description>In this article, we will create a custom registration form and add it to the application.
Let&amp;rsquo;s Create a database first register form: Right-click on &amp;ldquo;Models&amp;rdquo; and move the mouse to the &amp;ldquo;Add&amp;rdquo; button, then a new window with many options appears, click &amp;ldquo;class&amp;hellip;&amp;rdquo;. Enter a name for your new class and click &amp;ldquo;Add&amp;rdquo;. Edit new properties in the class file. Open the file &amp;ldquo;ApplicationDbContext.cs&amp;rdquo; in the &amp;ldquo;Data&amp;rdquo; folder and add Dbset the new class will just be created.</description>
    </item>
    
    <item>
      <title>ASP.NET MVC?</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/asp.net_mvc/</link>
      <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/asp.net_mvc/</guid>
      <description>ASP.NET Core is a web framework that can be used to build web applications and services. It provides a lot of features such as cross-platform support, high-performance, middleware, dependency injection, configuration, routing, and logging.
On the other hand, ASP.NET Core MVC is an extension of ASP.NET Core that specifically focuses on building web applications using the Model-View-Controller (MVC) pattern. The MVC pattern is a design pattern that separates the application logic into three interconnected components: the Model (data layer), View (user interface), and Controller (application logic).</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/getting_started/</link>
      <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/getting_started/</guid>
      <description>Visual Studio is an intuitive and feature-rich Integrated Development Environment (IDE) that supports ASP.NET Core development on multiple platforms. It offers powerful debugging tools, advanced code completion, and navigation features, and seamless integration with Microsoft&amp;rsquo;s cloud platform, Azure. As a result, it greatly simplifies the development of ASP.NET Core applications, making it a popular choice among developers.
Install Visual Studio: Go to the Visual Studio download page on the Microsoft website.</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://lien-chu.github.io/IncubatorBlog.io/post/hello_world/</link>
      <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lien-chu.github.io/IncubatorBlog.io/post/hello_world/</guid>
      <description>In this article, we will create our first application in Asp.Net Core MVC.
Let&amp;rsquo;s Create our first project in Asp.Net Core MVC: Open Visual Studio and click on &amp;ldquo;Create a new project&amp;rdquo; from the start menu. Select the ASP.NET Core Web App (Model-View-Controller) template and click &amp;ldquo;Next&amp;rdquo;. Enter a name for your project and click &amp;ldquo;Next&amp;rdquo;. Select the &amp;ldquo;.NET 7.0(Standard Term Support)&amp;rdquo; or latest version framework and clic &amp;ldquo;Create&amp;rdquo;. The project is created and the &amp;ldquo;Solution Explorer&amp;rdquo; window is displayed.</description>
    </item>
    
  </channel>
</rss>
